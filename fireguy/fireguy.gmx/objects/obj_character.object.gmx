<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>idle_r</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>-130</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize Variables
grav = 0;
vspd = 0;
hspd = 0;
dir = 0;
shoot_dir = 0;
shoot_dir_basic = 0;
can_shoot = true;
hold_shoot = false;
slide = false;
slide_dir = 0;
vspd_carry = 0;

fireball_selection = 1;
fireball_next = choose(fireball_red, fireball_blue, fireball_yellow, fireball_green);
fireball_count = 0;

fever = false;

fireball_x = 0;
fireball_y = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>slide = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hold_shoot = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_number(obj_fireball_bouncing) &lt; 3) can_shoot = true;
else alarm[0] = 5;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Platformer Movement
if (!place_meeting(x,y+1,obj_block)&amp;&amp;!place_meeting(x,y+1,obj_block_bottom)) // in the air
{
    //slide = false;
    grav = 0.5;
    vspd += grav;
    if (keyboard_check_released(ord('N')) &amp;&amp; (vspd &lt; 0)) vspd = 0;
}
else // on the ground
{
    grav = 0;
    vspd = 0;
    if keyboard_check_pressed(ord('N')) { // slide or jump
       /* if (keyboard_check(ord('S')) &amp;&amp; !slide) { // slide
            slide = true;
            can_shoot = false;
            slide_dir = dir;
            alarm[0] = 10;
            alarm[2] = 15;
        }
        else*/ vspd = -7; //jump
    }
}

repeat(abs(vspd)) // move vertically
{
    if !place_meeting(x,y+sign(vspd),obj_block) y += sign(vspd);
    else vspd = 0;
}
y += sign(vspd_carry);
vspd_carry = 0;

if (slide) { // move horizontally
    if (slide_dir == 0) hspd = 4;
    else hspd = -4;
}
else hspd = (keyboard_check(ord('D'))-keyboard_check(ord('A')))*2;

repeat(abs(hspd))
{
    if !place_meeting(x+sign(hspd),y,obj_block) x += sign(hspd);
    else slide = false;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Sprite
 if keyboard_check_pressed(ord('D')) dir = 0; 
 if keyboard_check_pressed(ord('A')) dir = 1;
 
 if (dir == 0)
 {
    if (place_meeting(x,y+1,obj_block)||place_meeting(x,y+2,obj_block_bottom)) // if on ground
    {
        if (keyboard_check(ord('D'))&amp;&amp;!keyboard_check(ord('A'))){ // running
            if ((keyboard_check_pressed(ord('B'))||hold_shoot)&amp;&amp;can_shoot) // running &amp;&amp; shooting
                {sprite_index = shoot_run_r; }//shoot_run_r
            else // running
                { sprite_index = run_r; }
        }
        else { // stationary
            if ((keyboard_check_pressed(ord('B'))&amp;&amp;can_shoot)||hold_shoot) // shooting
                { sprite_index = shoot_r; }
            else // idle
                { sprite_index = idle_r; }
        }
    }
    else { // in air 
        if ((keyboard_check_pressed(ord('B'))&amp;&amp;can_shoot)||hold_shoot) // shooting in air
            { sprite_index = shoot_jump_r; } // shoot_jump_r
        else
            { if (vspd &lt; -1) 
                sprite_index = jump_r;
                else
                sprite_index = falling_r;
            }
    }
 }
 else
 {
    if (place_meeting(x,y+1,obj_block)||place_meeting(x,y+1,obj_block_bottom)) // if on ground
    {
         if (keyboard_check(ord('A'))&amp;&amp;!keyboard_check(ord('D'))){ // running
            if ((keyboard_check(ord('B'))&amp;&amp;can_shoot)||hold_shoot) // running &amp;&amp; shooting
                {sprite_index = shoot_run_l;} // shoot_run_l
            else // running
                { sprite_index = run_l; }
        }
        else { // stationary
            if ((keyboard_check_pressed(ord('B'))&amp;&amp;can_shoot)||hold_shoot) // shooting
                { sprite_index = shoot_l; } 
            else // idle
                { sprite_index = idle_l; }
        }
    }
    else { // in air 
        if ((keyboard_check_pressed(ord('B'))&amp;&amp;can_shoot)||hold_shoot) // shooting in air
            { sprite_index = shoot_jump_l; } // shoot_jump_l
        else
        { if (vspd &lt; -1) 
                sprite_index = jump_l;
                else
                sprite_index = falling_l;
            }
    }
 }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Shoot Direction

// 8 direction
//if (keyboard_check(ord('W')) &amp;&amp; keyboard_check(ord('D'))) shoot_dir = 20; // up-right
//else if (keyboard_check(ord('W')) &amp;&amp; keyboard_check(ord('A'))) shoot_dir = 155; // 135up-left
//else if (keyboard_check(ord('S')) &amp;&amp; keyboard_check(ord('D'))) shoot_dir = 315; // down-right
//else if (keyboard_check(ord('S')) &amp;&amp; keyboard_check(ord('A'))) shoot_dir = 225; // down-left
if keyboard_check(ord('W')) shoot_dir = 90; // up 
else if keyboard_check(ord('A')) shoot_dir = 180; // left
else if keyboard_check(ord('S')) shoot_dir = 270; // down
//else if keyboard_check(ord('D')) shoot_dir = 0; // right

// left/right
if (dir == 0) shoot_dir_basic = 0;
else shoot_dir_basic = 180;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="86">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_play_sound(sound_select_fireball,0,false);
fireball_selection += 1;
can_shoot = false;
alarm[0] = 15
/*
if (obj_settings.level &lt; 5) {
    if (fireball_selection &gt; 4) {fireball_selection = 1;}
}
else if (obj_settings.level &lt; 10) {
    if (fireball_selection &gt; 5) {fireball_selection = 1;}
}
else {
*/
    if (fireball_selection &gt; 5) {fireball_selection = 1;}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="70">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if (fever) {
for(i = 0; i&lt;instance_number(obj_block_moving); i++) {
    instance = instance_find(obj_block_moving, i);
    chance = random(100);
    if (chance &lt; 30 &amp;&amp; instance.bbox_top &lt; room_height) {
        with (instance) { instance_destroy(); }
    }
}
fever = false;
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="66">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (can_shoot) //if canShoot = true
{
    fireball_y = y + 14;
    if (dir == 0) fireball_x = x + 24;
    else fireball_x = x + 3;

    // set sprite
    i = image_index;
    if (dir == 0) sprite_index = shoot_r;
    else sprite_index = shoot_l;    
    image_index = i;
    
    // set delay
    //can_shoot = false;

    hold_shoot = true;    
    alarm[0] = 10;
    alarm[2] = 30;
    alarm[1] = 12;

    instance_create(fireball_x, fireball_y, obj_fireball_bouncing);
    //fireball_next = choose(fireball_red, fireball_blue, fireball_yellow, fireball_green);
    fireball_count += 1;
    if (instance_number(obj_fireball_bouncing) &gt;= 3) can_shoot = false;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
