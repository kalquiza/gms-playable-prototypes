<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-99999999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>score = 0;
mult = 1000;
fever_threshold = 25000;
fever = 0;
level = 1;
difficulty = 1;
init_block_speed = 33;
block_speed = init_block_speed;
level_threshold = 30000;
gameover = false;
quit = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_goto(menu);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (score &gt;= (level_threshold * 1) &amp;&amp; level &lt; 2) {level = 2 ; block_speed -= 1;}
if (score &gt;= (level_threshold * 2) &amp;&amp; level &lt; 3) {level = 3 ; block_speed -= 1;} 
if (score &gt;= (level_threshold * 3) &amp;&amp; level &lt; 4) {level = 4 ; block_speed -= 1;} 
if (score &gt;= (level_threshold * 4) &amp;&amp; level &lt; 5) {level = 5 ; block_speed -= 1;} 
if (score &gt;= (level_threshold * 5) &amp;&amp; level &lt; 6) {level = 6 ; block_speed -= 1;} 
if (score &gt;= (level_threshold * 6) &amp;&amp; level &lt; 7) {level = 7 ; block_speed -= 1;} 
if (score &gt;= (level_threshold * 7) &amp;&amp; level &lt; 8) {level = 8 ; block_speed -= 1;} 
if (score &gt;= (level_threshold * 8) &amp;&amp; level &lt; 9) {level = 9 ; block_speed -= 1;} 
if (score &gt;= (level_threshold * 9) &amp;&amp; level &lt; 10) {level = 10 ; block_speed -= 1;}
if (score &gt;= (level_threshold * 10) &amp;&amp; level &lt; 11) {level = 11 ; block_speed -= 1;}
if (score &gt;= (level_threshold * 11) &amp;&amp; level &lt; 12) {level = 12 ; block_speed -= 1;}
if (score &gt;= (level_threshold * 12) &amp;&amp; level &lt; 13) {level = 13 ; block_speed -= 1;}
if (score &gt;= (level_threshold * 13) &amp;&amp; level &lt; 14) {level = 14 ; block_speed -= 1;}
if (score &gt;= (level_threshold * 14) &amp;&amp; level &lt; 15) {level = 15 ; block_speed -= 1;}
if (score &gt;= (level_threshold * 15) &amp;&amp; level &lt; 16) {level = 16 ; block_speed -= 1;}
if (score &gt;= (level_threshold * 16) &amp;&amp; level &lt; 17) {level = 17 ; block_speed -= 1;}
if (score &gt;= (level_threshold * 17) &amp;&amp; level &lt; 18) {level = 18 ; block_speed -= 1;}
if (score &gt;= (level_threshold * 18) &amp;&amp; level &lt; 19) {level = 19 ; block_speed -= 1;}
if (score &gt;= (level_threshold * 19) &amp;&amp; level &lt; 20) {level = 20 ; block_speed -= 1;}

if (score &gt;= fever_threshold) {
    fever_threshold += fever_threshold;
    obj_character.fever = true;
}

if (gameover) {
    with(obj_particle_tut) {
    part_emitter_clear(FirstParticleSystem,first_emitter);
    part_emitter_destroy(FirstParticleSystem,first_emitter);
    }
    
    with(obj_fireball_bouncing) {
    part_emitter_clear(FirstParticleSystem,first_emitter);
    part_emitter_destroy(FirstParticleSystem,first_emitter);
    }
    
    with(obj_particle_fireball) {
    part_emitter_clear(FirstParticleSystem,first_emitter);
    part_emitter_destroy(FirstParticleSystem,first_emitter);
    }
    
    instance_deactivate_all(true);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="78">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (gameover) {
    alarm[0] = 30;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!gameover) {
draw_set_colour(c_white);
draw_set_font(font_score);
draw_set_halign(fa_left);
draw_text(x, y+8, "SCORE: " + string(score));
draw_text(x, y+22, "LEVEL: " + string(level));
}
else{
    draw_text(x, y+22, "GAME OVER");
    draw_text(x, y+44, "TOTAL SCORE: " + string(score));
    draw_text(x, y+66,"PRESS TO EXIT");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
